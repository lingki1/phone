services:
  redis:
    image: redis:7-alpine
    container_name: phone-redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - /home/ubuntu/data/redis:/data
    ports:
      - "6380:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - phone-network
  # 权限初始化服务
  init-permissions:
    image: alpine:latest
    volumes:
      - /home/ubuntu/data:/data
      - /home/ubuntu/logs:/logs
    command: |
      sh -c '
        echo "正在初始化目录权限..."
        mkdir -p /data /logs
        mkdir -p /data/uploads/blackmarket
        chown -R 1000:1000 /data /logs
        chown -R 1000:1000 /data/uploads
        chmod -R 755 /data /logs
        chmod -R 755 /data/uploads
        echo "权限初始化完成！"
      '
    restart: "no"

  phone-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: phone-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - REDIS_CONN_STRING=redis://redis:6379/2
      - DEPLOY_VERSION=${DEPLOY_VERSION:-$(date +%s)}
    restart: unless-stopped
    depends_on:
      init-permissions:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    volumes:
      # 持久化数据目录 - 包含聊天室JSON文件和SQLite数据库
      - /home/ubuntu/data:/app/data
      # 可选：持久化日志文件
      - /home/ubuntu/logs:/app/logs
      # 持久化上传目录（映射到 public/uploads）
      - /home/ubuntu/data/uploads:/app/public/uploads
    # 移除用户映射，使用Dockerfile中的node用户
    # user: "1000:1000"
    networks:
      - phone-network

networks:
  phone-network:
    driver: bridge