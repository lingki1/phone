[{
    "version": "1.0",
    "image": {
      "name": "/var/www/new-toc/public/uploads/lea__lovely_puppet_librarian_1754683105.png",
      "format": "json",
      "formatDescription": "The image format and characteristics",
      "mimeType": "application/json",
      "class": "PseudoClass",
      "geometry": {
        "width": 800,
        "height": 1169,
        "x": 0,
        "y": 0
      },
      "resolution": {
        "x": 28.35,
        "y": 28.35
      },
      "printSize": {
        "x": 28.2187,
        "y": 41.2346
      },
      "units": "PixelsPerCentimeter",
      "type": "Palette",
      "endianness": "Undefined",
      "colorspace": "sRGB",
      "depth": 8,
      "baseDepth": 8,
      "channelDepth": {
        "red": 8,
        "green": 8,
        "blue": 8
      },
      "pixels": 935200,
      "imageStatistics": {
        "all": {
          "min": 0,
          "max": 255,
          "mean": 63.1191,
          "standardDeviation": 56.7358,
          "kurtosis": 2.2128,
          "skewness": 1.75573,
          "entropy": 0.892305
        }
      },
      "channelStatistics": {
        "red": {
          "min": 0,
          "max": 255,
          "mean": 75.3647,
          "standardDeviation": 67.7258,
          "kurtosis": 0.848085,
          "skewness": 1.44366,
          "entropy": 0.918445
        },
        "green": {
          "min": 0,
          "max": 255,
          "mean": 61.944,
          "standardDeviation": 55.7014,
          "kurtosis": 2.02218,
          "skewness": 1.69311,
          "entropy": 0.884143
        },
        "blue": {
          "min": 0,
          "max": 254,
          "mean": 52.0487,
          "standardDeviation": 46.7802,
          "kurtosis": 3.82683,
          "skewness": 2.05516,
          "entropy": 0.874327
        }
      },
      "colormapEntries": 256,
      "colormap": [
          "#1A1818","#2C2521","#2B221E","#2E221D","#21201F",
        "#000000","#171413","#322620","#140C0D","#0E0D0B",
        "#181717","#131817","#29201B","#493F38","#1F1D1C",
        "#2F241F","#413732","#373938","#11090C","#312923",
        "#27221F","#3C2E24","#423125","#352A22","#232121",
        "#170E0E","#111515","#1C1513","#1B2224","#303534",
        "#241F1C","#251715","#231C18","#20272B","#0E1413",
        "#37261F","#40352A","#2D1C18","#1E1A17","#463C37",
        "#1D1B1B","#232C2F","#2B3130","#392B22","#181F22",
        "#1E2427","#2A1916","#483932","#352E27","#141312",
        "#272E30","#4F3D2A","#33221C","#281D19","#191D1D",
        "#3D3531","#3E3A36","#272822","#54402D","#443935",
        "#2E2C26","#343736","#161A19","#0F080A","#2B2924",
        "#36322E","#3B3530","#4C4230","#493C2D","#302E2B",
        "#4F3C33","#39221B","#231D1D","#221C1C","#41261D",
        "#211715","#705637","#262C2A","#433D2F","#0A0908",
        "#48382B","#111B1E","#5D4A30","#5E4C38","#FAE4D0",
        "#222727","#1B1210","#59432E","#635033","#ECCFB0",
        "#F1D4B6","#121110","#2D3333","#3B322A","#534338",
        "#34312D","#212A2E","#393D3B","#201513","#E3BD9B",
        "#685135","#3D3A2E","#F3C8AE","#463226","#563A29",
        "#D9AE89","#574736","#E5BFA0","#E4C5A7","#0C1211",
        "#B49082","#57554B","#6F695C","#49291F","#070405",
        "#070D0E","#46362A","#4D453E","#805D3C","#434440",
        "#554635","#3A1D14","#22251E","#393029","#4E4D47",
        "#785B39","#87603B","#5E3D2A","#66442D","#676458",
        "#96693E","#ECC6AA","#AD5C3F","#E0B896","#FEEDD5",
        "#FCF9F1","#9D6E41","#534B3F","#D1AA8C","#DDB591",
        "#FFFFFE","#AC8C72","#FDE0C8","#A67543","#E7CBAC",
        "#DBBDA3","#9C7B67","#AA887C","#D7B69B","#FCCDB7",
        "#F0D9C1","#B07D47","#D6A57D","#685242","#756F62",
        "#D3AE97","#C9A182","#B9854C","#72482D","#5D5B4E",
        "#745D48","#FDD8BE","#532A1C","#503224","#636053",
        "#EBC1A4","#C39978","#9E4730","#D1A076","#CA845A",
        "#5F311F","#BD998A","#C09154","#944D2D","#311411",
        "#8E663E","#8D6E58","#EDDBCF","#C6906E","#DB9365",
        "#E7D3C6","#853F24","#A18274","#C57654","#C5A393",
        "#E97E41","#C99D5C","#B76C4E","#220D0C","#6F3720",
        "#E6CCBC","#DBC2B3","#E56E3C","#FFF2DF","#BC8767",
        "#81654F","#160101","#EC9344","#CD9061","#815032",
        "#D3AE70","#D0A06A","#8D633B","#C3ADA1","#80786C",
        "#F4A64F","#E1B67C","#F5E6DB","#F9CE9A","#C16A41",
        "#E3B28A","#B37D5F","#2F0200","#4C3827","#FFFFF0",
        "#9B7357","#D1B7A9","#CE9C69","#FFFBDF","#B04A2B",
        "#ECA274","#490200","#FEBE9F","#D07F43","#36503B",
        "#496046","#8D8176","#E3C48B","#D8C8C1","#660E02",
        "#DFAC60","#D66334","#F9C284","#D8957E","#D5BB81",
        "#E3CC98","#F8AF82","#403C38","#E6C9AA","#CCBDB6",
        "#FFEFBE","#AE9E93","#C3552E","#7E240D","#FCE3AD",
        "#9D9185","#FDB895","#533524","#FED1B1","#A97659",
        "#ECCE64","#FADFA7","#EEBE93","#DEAE81","#CAF2A1",
        "#A3CA83"
      ],
      "renderingIntent": "Perceptual",
      "gamma": 0.454545,
      "chromaticity": {
        "redPrimary": {
          "x": 0.64,
          "y": 0.33
        },
        "greenPrimary": {
          "x": 0.3,
          "y": 0.6
        },
        "bluePrimary": {
          "x": 0.15,
          "y": 0.06
        },
        "whitePrimary": {
          "x": 0.3127,
          "y": 0.329
        }
      },
      "backgroundColor": "#FFFFFF",
      "borderColor": "#DFDFDF",
      "matteColor": "#BDBDBD",
      "transparentColor": "#000000",
      "interlace": "None",
      "intensity": "Undefined",
      "compose": "Over",
      "pageGeometry": {
        "width": 800,
        "height": 1169,
        "x": 0,
        "y": 0
      },
      "dispose": "Undefined",
      "iterations": 0,
      "compression": "Zip",
      "orientation": "Undefined",
      "properties": {
        "ccv3": "",
        "chara": "",
        "date:create": "2025-08-08T19:58:25+00:00",
        "date:modify": "2025-08-08T19:58:25+00:00",
        "png:IHDR.bit-depth-orig": "8",
        "png:IHDR.bit_depth": "8",
        "png:IHDR.color-type-orig": "3",
        "png:IHDR.color_type": "3 (Indexed)",
        "png:IHDR.interlace_method": "0 (Not interlaced)",
        "png:IHDR.width,height": "800, 1169",
        "png:pHYs": "x_res=2835, y_res=2835, units=1",
        "png:PLTE.number_colors": "256",
        "png:sRGB": "intent=0 (Perceptual Intent)",
        "png:text": "2 tEXt/zTXt/iTXt chunks were found",
        "signature": "57032d1255ca29cc6e997cd7bb49a08a95a5ea4e115b2112ff469b0168640608"
      },
      "tainted": false,
      "filesize": "529707B",
      "numberPixels": "935200",
      "pixelsPerSecond": "7.83223GB",
      "userTime": "0.000u",
      "elapsedTime": "0:01.000",
      "version": "ImageMagick 6.9.11-60 Q16 x86_64 2021-01-25 https://imagemagick.org"
    }
  }
  ]